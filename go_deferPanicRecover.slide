defer, panic and recover
in Go
6 Nov 2016

Loh Siu Yin
Technology Consultant, Beyond Broadcast LLP
siuyin@beyondbroadcast.com

* defer, panic and recover
Keywords in standard Go.

* defer
defer/main.go:
.play -edit defer/main.go

The deferred function(s) will run Last-In-First-Out when the function exits/returns.

: Emphasize the LIFO nature.

* defer in a non-main function
defer2/main.go:
.play -edit defer2/main.go

: Ask audience to predict sequence.

* panic
*panic* causes the executing function to scream for help!
panic/main.go:
.play -edit panic/main.go

If there is no one to help the panicking function to recover..., it dies!

: Ask how does it dies.

* recovering a panic in a deferred function
We can  *recover* from a panic only in a *defer* ed function.
panic2/main.go:
.code panic2/main.go /010 OMIT/,/020 OMIT/
.play -edit panic2/main.go /020 OMIT/,/030 OMIT/

: Point out the panicked function does not continue after panicking.

* Full-reporting panicker
When a function panics it drops what it is doing and yells out with type interface{}.
panic3/main.go:
.code panic3/main.go /010 OMIT/,/020 OMIT/
.code panic3/main.go /030 OMIT/,/040 OMIT/
.play -edit panic3/main.go /050 OMIT/,/060 OMIT/
